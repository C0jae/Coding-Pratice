# 창고 수
n = int(input("창고 수 : "))

# 창고별 식량 수
k = list(map(int, input("창고별 식량 갯수 : ").split()))

# 창고 개수별 최대 식량수를 나타내는 배열(3 <= n <= 100)
d = [0] * 100

# 창고가 하나 및 두개일 경우의 식량 최댓값
# (n은 3이상이어야 하므로 필요는 없지만 배열의 순서를 맞추기 위해 추가)
d[0] = k[0]
d[1] = max(k[0], k[1])

# 창고의 갯수가 n개일때와 n-1개일때의 식량의 최대값을 비교하여 큰 수를 d[n-1]에 값을 할당하는 Bottom-Up방식
for i in range(2, n):
    # (i + 1) 번째 창고를 털었을 경우의 최대값 : d[i - 1]값 + (i + 1)번째 창고의 식량값 -> d[i - 2] + k[i]
    # (i + 1)번 창고가 있지만 i번째 창고를 털었을 경우의 최대값 : (d[i-1])
    # 위의 두 경우의 수중 최대값을 d[i]로 할당 <- 창고가 i + 1일 경우의 가져갈 수 있는 식량의 최대값
    d[i] = max(d[i - 2] + k[i], d[i - 1])
    
print(d[n - 1])